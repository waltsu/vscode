{
  // Vim easymotion is required for Jump menu - <SPC> j
  "vim.easymotion": true,
  // Use system clipboard for vim
  "vim.useSystemClipboard": true,
  // Trigger the main which key menu with in the active editor with vim
  // This cannot be put into keybindings.json because it will
  // create conflict with Vim.
  // https://github.com/stevenguh/spacecode/issues/3
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vspacecode.bindingOverrides": [
    {
      "keys": "g.g",
      "name": "Status",
      "type": "command",
      "command": "magit.status"
    },
    {
      "keys": "c.d",
      "name": "Jump to definition",
      "type": "command",
      "command": "editor.action.revealDefinition"
    },
    {
      "keys": "c.D",
      "name": "Search all references",
      "type": "command",
      "command": "editor.action.referenceSearch.trigger"
    },
    {
      "keys": "c.h",
      "name": "Show Hover",
      "type": "command",
      "command": "editor.action.showHover"
    },
    {
      "keys": "c.f",
      "name": "Show search",
      "type": "command",
      "command": "workbench.view.search"
    },
    {
      "keys": "c.x",
      "name": "Show problems",
      "type": "command",
      "command": "workbench.actions.view.problems"
    }
  ],
  "editor.formatOnSave": true,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[ruby]": {
    "editor.defaultFormatter": "Shopify.ruby-lsp",
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "editor.rulers": [
      120
    ],
    "editor.semanticHighlighting.enabled": true
  },
  "[markdown]": {
    "editor.formatOnSave": false
  },
  "prettier.singleQuote": true,
  "prettier.requireConfig": true,
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "debug.javascript.unmapMissingSources": true,

  "ruby.useBundler": true,
  "ruby.useLanguageServer": true,
  "ruby.lint": {
    "rubocop": {
      "useBundler": true
    }
  },
  "ruby.format": "rubocop",
  "ruby.rubocop.configFilePath": ".rubocop.yml",
  "ruby.intellisense": "rubyLocate",
  "prettier.jsxSingleQuote": true,
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "explorer.confirmDelete": false,
  "editor.cursorStyle": "line",
  "editor.lineNumbers": "on",
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.wordWrap": "off",
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "files.insertFinalNewline": true,
  "mermaid-editor.generate.type": "svg",
  "[python]": {
    "editor.formatOnType": true,
    "editor.tabSize": 4,
    "editor.insertSpaces": true
  },
  "flake8.importStrategy": "fromEnvironment",
  "python.analysis.diagnosticSeverityOverrides": {
    "reportShadowedImports": "none"
  },
  "phpstan.configPath": "/Users/waltsu/workspace/smartly-v1/test/php_codestyle/phpstan.neon",
  "phpstan.path": "./system/vendor/bin/phpstan",
  "php-cs-fixer.lastDownload": 1695106024720,
  "editor.snippets.codeActions.enabled": false,
  "editor.suggest.showSnippets": false,
  "jupyter.runStartupCommands": [
    "%load_ext autoreload", "%autoreload 2"
],
"editor.stickyScroll.enabled": false
}
